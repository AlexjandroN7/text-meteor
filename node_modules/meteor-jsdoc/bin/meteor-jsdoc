#!/usr/bin/env node

const path            = require("path");
const cjson           = require("cjson");
const Config          = require("../lib/config");
const ActionsRegistry = require("../lib/actions");
const helpers         = require("../lib/helpers");

helpers.log("\rmeteor-jsdoc: Automated JSDoc generation for Meteor projects");
helpers.log("-------------------------------------------------------------\n");

var action = process.argv[2];

var invalidAction = function(action) {
  helpers.error(`Invalid action: ${action}`);
  helpers.printHelp();
}

if (action == "init") {
  // Special setup for init
  ActionsRegistry.init();
} else {
  var cwd             = path.resolve(".");
  // Read config and validate it
  var config          = Config.read();
  var actionsRegistry = new ActionsRegistry(config, cwd);

  if (actionsRegistry[action]) {
    try {
      actionsRegistry[action]();
    } catch (e) {
      invalidAction(action);
    }
  } else {
    invalidAction(action);
  }
}
